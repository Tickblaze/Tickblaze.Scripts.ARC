<ResourceDictionary
	xmlns:system="clr-namespace:System;assembly=mscorlib"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:common="clr-namespace:Tickblaze.Scripts.Arc.Common"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
		<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
		<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Dark.Blue.xaml" />
	</ResourceDictionary.MergedDictionaries>
	
	<!-- Core Resources. -->

	<system:Double x:Key="DefaultMargin">2.0</system:Double>
	<system:Double x:Key="DefaultDoubleMargin">4.0</system:Double>

	<Thickness
		x:Key="DefaultThickness"
		Top="{StaticResource DefaultMargin}"
		Bottom="{StaticResource DefaultMargin}"
		Left="{StaticResource DefaultMargin}"
		Right="{StaticResource DefaultMargin}" />

	<Thickness
		x:Key="DoubleHorizontalThickness"
		Top="{StaticResource DefaultMargin}"
		Bottom="{StaticResource DefaultMargin}"
		Left="{StaticResource DefaultDoubleMargin}"
		Right="{StaticResource DefaultDoubleMargin}" />
	
	<!-- MahApps Button Resources. -->

	<Style TargetType="ToggleButton" BasedOn="{StaticResource MahApps.Styles.ToggleButton}">
		<Setter Property="MinHeight" Value="20" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="mah:ControlsHelper.CornerRadius" Value="0" />
		<Setter Property="Padding" Value="{StaticResource DefaultThickness}" />
	</Style>

	<Style x:Key="ToggleButtonOnOffStyle" TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
		<Style.Triggers>
			<Trigger Property="IsChecked" Value="True">
				<Setter Property="Content" Value="ON" />
			</Trigger>
			<Trigger Property="IsChecked" Value="False">
				<Setter Property="Content" Value="OFF" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- MahApps NumericUpDown Resources. -->

	<Style TargetType="mah:NumericUpDown" BasedOn="{StaticResource {x:Type mah:NumericUpDown}}">
		<Setter Property="MinHeight" Value="20" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="Padding" Value="{StaticResource DefaultThickness}" />
	</Style>

	<!-- MahApps TextBlock Resources. -->

	<Style TargetType="TextBlock" BasedOn="{StaticResource MahApps.Styles.TextBlock}">
		<Setter Property="Padding" Value="{StaticResource DefaultThickness}" />
	</Style>

	<!-- MahApps MenuItem Resources. -->

	<ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
		<Grid SnapsToDevicePixels="True">
			<Rectangle
				Name="Bg"
				Margin="1"
				StrokeThickness="1"
				Fill="{TemplateBinding Background}"
				Stroke="{TemplateBinding BorderBrush}" />

			<ContentPresenter
				ContentSource="Header"
				RecognizesAccessKey="True"
				Margin="{TemplateBinding Padding}"
				SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

			<Popup
				Name="PART_Popup"
				Focusable="False"
				Placement="Bottom"
				VerticalOffset="-2"
				HorizontalOffset="1"
				AllowsTransparency="True"
				IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
				PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
				<Grid Name="SubMenuRoot">
					<Rectangle Name="LayoutRoot" Fill="{TemplateBinding Background}" />

					<ContentControl
						IsTabStop="False"
						Name="SubMenuBorder"
						Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
						<ScrollViewer
							Name="SubMenuScrollViewer"
							ScrollViewer.CanContentScroll="True"
							Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
							<ItemsPresenter
								Margin="0"
								Name="ItemsPresenter"
								Grid.IsSharedSizeScope="True"
								KeyboardNavigation.TabNavigation="Cycle"
								KeyboardNavigation.DirectionalNavigation="Cycle"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</ScrollViewer>
					</ContentControl>
				</Grid>
			</Popup>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="True">
				<Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
			</Trigger>

			<Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
				<Setter TargetName="SubMenuRoot" Property="Margin" Value="0 0 6 6" />
				<Setter TargetName="LayoutRoot" Property="UIElement.Effect" Value="{DynamicResource MahApps.DropShadowEffect.Menu}" />
			</Trigger>

			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.MenuItem.Foreground.Disabled}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
		<Grid SnapsToDevicePixels="True">
			<Rectangle
				Name="Bg"
				Margin="1"
				StrokeThickness="1"
				Fill="{TemplateBinding Background}"
				Stroke="{TemplateBinding BorderBrush}" />
		
			<ContentPresenter
				ContentSource="Header"
				RecognizesAccessKey="True"
				Margin="{TemplateBinding Padding}"
				SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.MenuItem.Foreground.Disabled}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
		<Grid SnapsToDevicePixels="True">
			<Rectangle
				Name="Bg"
				StrokeThickness="1"
				Fill="{TemplateBinding Background}"
				Stroke="{TemplateBinding BorderBrush}" />
		
			<Grid Margin="{TemplateBinding Padding}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
					<ColumnDefinition Width="17" />
				</Grid.ColumnDefinitions>
			
				<ContentPresenter
					Grid.Column="0"
					ContentSource="Header"
					RecognizesAccessKey="True"
					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
			
				<TextBlock
					Grid.Column="1"
					Visibility="Collapsed"
					Text="{TemplateBinding InputGestureText}" />
			
				<Path
					Grid.Column="3"
					Margin="4 0 0 0"
					VerticalAlignment="Center"
					Data="{DynamicResource RightArrow}"
					Fill="{DynamicResource MahApps.Brushes.RightArrowFill}" />
			</Grid>
		
			<Grid Margin="2 0 1 0">
				<Popup
					Name="PART_Popup"
					Focusable="False"
					Placement="Right"
					VerticalOffset="-1"
					HorizontalOffset="1"
					AllowsTransparency="True"
					IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
					PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
					<Grid Name="SubMenuRoot">
						<Rectangle Name="LayoutRoot" Fill="{TemplateBinding Background}" />
					
						<ContentControl
							IsTabStop="False"
							Name="SubMenuBorder"
							Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
							<ScrollViewer
								Name="SubMenuScrollViewer"
								ScrollViewer.CanContentScroll="True"
								Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
								<ItemsPresenter
									Margin="0"
									Name="ItemsPresenter"
									Grid.IsSharedSizeScope="True"
									KeyboardNavigation.TabNavigation="Cycle"
									KeyboardNavigation.DirectionalNavigation="Cycle"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</ScrollViewer>
						</ContentControl>
					</Grid>
				</Popup>
			</Grid>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="True">
				<Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
			</Trigger>

			<Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
				<Setter TargetName="LayoutRoot" Property="UIElement.Effect" Value="{DynamicResource MahApps.DropShadowEffect.Menu}" />
				<Setter TargetName="SubMenuRoot" Property="Margin" Value="0 0 6 6" />
			</Trigger>

			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.MenuItem.Foreground.Disabled}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
		<Grid SnapsToDevicePixels="True">
			<Rectangle
				Name="Bg"
				StrokeThickness="1"
				Fill="{TemplateBinding Background}"
				Stroke="{TemplateBinding BorderBrush}" />

			<Grid Margin="{TemplateBinding Padding}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>

				<ContentPresenter
					Grid.Column="0"
					ContentSource="Header"
					RecognizesAccessKey="True"
					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
			</Grid>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.MenuItem.Foreground.Disabled}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- MenuItem Resources. -->

	<system:Double x:Key="MenuHeaderTextMinWidth">150.0</system:Double>
	<system:Double x:Key="MenuHeaderTextMaxWidth">200.0</system:Double>
	<system:Double x:Key="MenuHeaderParameterMinWidth">75.0</system:Double>
	<system:Double x:Key="MenuHeaderParameterMaxWidth">100.0</system:Double>

	<DataTemplate x:Key="ToggleButtonMenuItemHeaderTemplate" DataType="common:ToggleButtonMenuItem">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition
					Width="Auto"
					SharedSizeGroup="Labels"
					MinWidth="{StaticResource MenuHeaderTextMinWidth}"
					MaxWidth="{StaticResource MenuHeaderTextMaxWidth}" />
				<ColumnDefinition
					Width="Auto"
					SharedSizeGroup="Parameters"
					MinWidth="{StaticResource MenuHeaderParameterMinWidth}"
					MaxWidth="{StaticResource MenuHeaderParameterMaxWidth}" />
			</Grid.ColumnDefinitions>

			<TextBlock
				Grid.Row="0"
				Grid.Column="0"
				TextWrapping="NoWrap"
				VerticalAlignment="Center"
				HorizontalAlignment="Left"
				TextTrimming="CharacterEllipsis"
				MaxWidth="{StaticResource MenuHeaderTextMaxWidth}"
				Text="{Binding Header, Mode=OneWay, RelativeSource={RelativeSource AncestorType=common:OnOffMenuItem}}" />

			<ToggleButton
				DataContext="{Binding ., Mode=OneWay, RelativeSource={RelativeSource AncestorType=common:OnOffMenuItem}}"
				Grid.Row="0"
				Grid.Column="1"
				VerticalAlignment="Center"
				IsChecked="{Binding IsOn, Mode=TwoWay}"
				Style="{StaticResource ToggleButtonOnOffStyle}"
				IsThreeState="{Binding IsThreeState, Mode=OneWay}"
				MaxWidth="{StaticResource MenuHeaderParameterMaxWidth}" />
		</Grid>
	</DataTemplate>

	<Style TargetType="MenuItem" BasedOn="{StaticResource MahApps.Styles.MenuItem}">
		<Setter Property="Margin" Value="0" />
		<Setter Property="MinHeight" Value="20" />
		<Style.Triggers>
			<Trigger Property="MenuItem.Role" Value="TopLevelHeader">
				<Setter Property="Padding" Value="{StaticResource DoubleHorizontalThickness}" />
			</Trigger>
			<Trigger Property="MenuItem.Role" Value="TopLevelItem">
				<Setter Property="Padding" Value="{StaticResource DoubleHorizontalThickness}" />
			</Trigger>
			<Trigger Property="MenuItem.Role" Value="SubmenuHeader">
				<Setter Property="Padding" Value="{StaticResource DoubleHorizontalThickness}" />
			</Trigger>
			<Trigger Property="MenuItem.Role" Value="SubmenuItem">
				<Setter Property="Padding" Value="{StaticResource DoubleHorizontalThickness}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="common:OnOffMenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="HeaderTemplate" Value="{StaticResource ToggleButtonMenuItemHeaderTemplate}" />
	</Style>

	<DataTemplate x:Key="NumericMenuItemHeaderTemplate" DataType="common:NumericMenuItem">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition
					Width="Auto"
					SharedSizeGroup="Labels"
					MinWidth="{StaticResource MenuHeaderTextMinWidth}"
					MaxWidth="{StaticResource MenuHeaderTextMaxWidth}" />
				<ColumnDefinition
					Width="Auto"
					SharedSizeGroup="Parameters"
					MinWidth="{StaticResource MenuHeaderParameterMinWidth}"
					MaxWidth="{StaticResource MenuHeaderParameterMaxWidth}" />
			</Grid.ColumnDefinitions>

			<TextBlock
				Grid.Row="0"
				Grid.Column="0"
				TextWrapping="NoWrap"
				VerticalAlignment="Center"
				HorizontalAlignment="Left"
				TextTrimming="CharacterEllipsis"
				MaxWidth="{StaticResource MenuHeaderTextMaxWidth}"
				Text="{Binding Header, Mode=OneWay, RelativeSource={RelativeSource AncestorType=common:NumericMenuItem}}" />

			<mah:NumericUpDown
				DataContext="{Binding ., Mode=OneWay, RelativeSource={RelativeSource AncestorType=common:NumericMenuItem}}"
				Grid.Row="0"
				Grid.Column="1"
				TextAlignment="Left"
				HideUpDownButtons="True"
				VerticalAlignment="Center"
				Value="{Binding Value, Mode=TwoWay}"
				Minimum="{Binding Minimum, Mode=OneWay}"
				Maximum="{Binding Maximum, Mode=OneWay}"
				Interval="{Binding Interval, Mode=OneWay}"
				MaxWidth="{StaticResource MenuHeaderParameterMaxWidth}"
				NumericInputMode="{Binding NumericInputMode, Mode=OneWay}" />
		</Grid>
	</DataTemplate>

	<Style TargetType="common:NumericMenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="HeaderTemplate" Value="{StaticResource NumericMenuItemHeaderTemplate}" />
	</Style>
	
	<DataTemplate x:Key="EnumMenuItemHeaderTemplate" DataType="common:EnumMenuItem">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition
					Width="Auto"
					SharedSizeGroup="Labels"
					MinWidth="{StaticResource MenuHeaderTextMinWidth}"
					MaxWidth="{StaticResource MenuHeaderTextMaxWidth}" />
				<ColumnDefinition
					Width="Auto"
					SharedSizeGroup="Parameters"
					MinWidth="{StaticResource MenuHeaderParameterMinWidth}"
					MaxWidth="{StaticResource MenuHeaderParameterMaxWidth}" />
			</Grid.ColumnDefinitions>

			<TextBlock
				Grid.Row="0"
				Grid.Column="0"
				TextWrapping="NoWrap"
				VerticalAlignment="Center"
				HorizontalAlignment="Left"
				TextTrimming="CharacterEllipsis"
				MaxWidth="{StaticResource MenuHeaderTextMaxWidth}"
				Text="{Binding Header, Mode=OneWay, RelativeSource={RelativeSource AncestorType=common:EnumMenuItem}}" />

			<ComboBox
				DataContext="{Binding ., Mode=OneWay, RelativeSource={RelativeSource AncestorType=common:EnumMenuItem}}"
				Grid.Row="0"
				Grid.Column="1"
				SelectedValuePath="Value"
				VerticalAlignment="Center"
				DisplayMemberPath="DisplayName"
				ItemsSource="{Binding EnumItems, Mode=OneTime}"
				SelectedValue="{Binding SelectedEnum, Mode=TwoWay}"
				MaxWidth="{StaticResource MenuHeaderParameterMaxWidth}" />
		</Grid>
	</DataTemplate>

	<Style TargetType="common:EnumMenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="HeaderTemplate" Value="{StaticResource EnumMenuItemHeaderTemplate}" />
	</Style>
</ResourceDictionary>